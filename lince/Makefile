# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_win64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -Isrc -I../vendor/glfw/include -I../vendor/glad/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -Wall -Wextra
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -Wall -Wextra
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(CC) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_win64)
TARGETDIR = ../bin/Debug-windows-x86_64/lince
TARGET = $(TARGETDIR)/lince.exe
OBJDIR = ../obj/Debug-windows-x86_64/lince
DEFINES += -DGLFW_INCLUDED_NONE -DGLFW_INCLUDE_NONE -DLINCE_WINDOWS -D_CRT_SECURE_NO_WARNINGS -DLINCE_DEBUG
LIBS += ../vendor/glad/bin/Debug-windows-x86_64/glad.lib ../vendor/glfw/bin/Debug-windows-x86_64/glfw.lib -lGL -lrt -lm -ldl -lpthread
LDDEPS += ../vendor/glad/bin/Debug-windows-x86_64/glad.lib ../vendor/glfw/bin/Debug-windows-x86_64/glfw.lib
ALL_LDFLAGS += $(LDFLAGS) -L../vendor/glad/bin/Debug-windows-x86_64/glad -L../vendor/glad/bin/Debug-windows-x86_64/glfw -L/usr/lib64 -m64

else ifeq ($(config),debug_linux)
TARGETDIR = ../bin/Debug-linux-x86_64/lince
TARGET = $(TARGETDIR)/lince
OBJDIR = ../obj/Debug-linux-x86_64/lince
DEFINES += -DGLFW_INCLUDED_NONE -DGLFW_INCLUDE_NONE -DLINCE_LINUX -DLINCE_DEBUG
LIBS += ../vendor/glad/bin/Debug-linux-x86_64/libglad.a ../vendor/glfw/bin/Debug-linux-x86_64/libglfw.a -lGL -lrt -lm -ldl -lpthread
LDDEPS += ../vendor/glad/bin/Debug-linux-x86_64/libglad.a ../vendor/glfw/bin/Debug-linux-x86_64/libglfw.a
ALL_LDFLAGS += $(LDFLAGS) -L../vendor/glad/bin/Debug-linux-x86_64/glad -L../vendor/glad/bin/Debug-linux-x86_64/glfw -L/usr/lib64 -m64

else ifeq ($(config),release_win64)
TARGETDIR = ../bin/Release-windows-x86_64/lince
TARGET = $(TARGETDIR)/lince.exe
OBJDIR = ../obj/Release-windows-x86_64/lince
DEFINES += -DGLFW_INCLUDED_NONE -DGLFW_INCLUDE_NONE -DLINCE_WINDOWS -D_CRT_SECURE_NO_WARNINGS -DLINCE_RELEASE
LIBS += ../vendor/glad/bin/Release-windows-x86_64/glad.lib ../vendor/glfw/bin/Release-windows-x86_64/glfw.lib -lGL -lrt -lm -ldl -lpthread
LDDEPS += ../vendor/glad/bin/Release-windows-x86_64/glad.lib ../vendor/glfw/bin/Release-windows-x86_64/glfw.lib
ALL_LDFLAGS += $(LDFLAGS) -L../vendor/glad/bin/Release-windows-x86_64/glad -L../vendor/glad/bin/Release-windows-x86_64/glfw -L/usr/lib64 -m64

else ifeq ($(config),release_linux)
TARGETDIR = ../bin/Release-linux-x86_64/lince
TARGET = $(TARGETDIR)/lince
OBJDIR = ../obj/Release-linux-x86_64/lince
DEFINES += -DGLFW_INCLUDED_NONE -DGLFW_INCLUDE_NONE -DLINCE_LINUX -DLINCE_RELEASE
LIBS += ../vendor/glad/bin/Release-linux-x86_64/libglad.a ../vendor/glfw/bin/Release-linux-x86_64/libglfw.a -lGL -lrt -lm -ldl -lpthread
LDDEPS += ../vendor/glad/bin/Release-linux-x86_64/libglad.a ../vendor/glfw/bin/Release-linux-x86_64/libglfw.a
ALL_LDFLAGS += $(LDFLAGS) -L../vendor/glad/bin/Release-linux-x86_64/glad -L../vendor/glad/bin/Release-linux-x86_64/glfw -L/usr/lib64 -m64

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/app.o
GENERATED += $(OBJDIR)/buffer.o
GENERATED += $(OBJDIR)/context.o
GENERATED += $(OBJDIR)/event.o
GENERATED += $(OBJDIR)/input.o
GENERATED += $(OBJDIR)/keyEvent.o
GENERATED += $(OBJDIR)/mouseEvent.o
GENERATED += $(OBJDIR)/renderer.o
GENERATED += $(OBJDIR)/window.o
GENERATED += $(OBJDIR)/windowEvent.o
OBJECTS += $(OBJDIR)/app.o
OBJECTS += $(OBJDIR)/buffer.o
OBJECTS += $(OBJDIR)/context.o
OBJECTS += $(OBJDIR)/event.o
OBJECTS += $(OBJDIR)/input.o
OBJECTS += $(OBJDIR)/keyEvent.o
OBJECTS += $(OBJDIR)/mouseEvent.o
OBJECTS += $(OBJDIR)/renderer.o
OBJECTS += $(OBJDIR)/window.o
OBJECTS += $(OBJDIR)/windowEvent.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking lince
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning lince
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CC) -x c-header $(ALL_CFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/app.o: src/app.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/event.o: src/event/event.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/keyEvent.o: src/event/keyEvent.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/mouseEvent.o: src/event/mouseEvent.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/windowEvent.o: src/event/windowEvent.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/input.o: src/input.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/buffer.o: src/renderer/buffer.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/context.o: src/renderer/context.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/renderer.o: src/renderer/renderer.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/window.o: src/renderer/window.c
	@echo $(notdir $<)
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif