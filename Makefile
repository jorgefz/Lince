# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug_win64
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug_win64)
  glfw_config = debug_win64
  glad_config = debug_win64
  lince_config = debug_win64

else ifeq ($(config),debug_linux)
  glfw_config = debug_linux
  glad_config = debug_linux
  lince_config = debug_linux

else ifeq ($(config),release_win64)
  glfw_config = release_win64
  glad_config = release_win64
  lince_config = release_win64

else ifeq ($(config),release_linux)
  glfw_config = release_linux
  glad_config = release_linux
  lince_config = release_linux

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := glfw glad lince

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

glfw:
ifneq (,$(glfw_config))
	@echo "==== Building glfw ($(glfw_config)) ===="
	@${MAKE} --no-print-directory -C vendor/glfw -f Makefile config=$(glfw_config)
endif

glad:
ifneq (,$(glad_config))
	@echo "==== Building glad ($(glad_config)) ===="
	@${MAKE} --no-print-directory -C vendor/glad -f Makefile config=$(glad_config)
endif

lince: glad glfw
ifneq (,$(lince_config))
	@echo "==== Building lince ($(lince_config)) ===="
	@${MAKE} --no-print-directory -C lince -f Makefile config=$(lince_config)
endif

clean:
	@${MAKE} --no-print-directory -C vendor/glfw -f Makefile clean
	@${MAKE} --no-print-directory -C vendor/glad -f Makefile clean
	@${MAKE} --no-print-directory -C lince -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug_win64"
	@echo "  debug_linux"
	@echo "  release_win64"
	@echo "  release_linux"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   glfw"
	@echo "   glad"
	@echo "   lince"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"